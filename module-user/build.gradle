plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'jacoco'
}
springBoot {
    mainClass = 'com.billing.UserModuleApplication'
}
group = 'com.billing'
version = '0.0.1-SNAPSHOT'
java {
    sourceCompatibility = '21'
}
repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.11"
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test  // 테스트가 실행된 후에 리포트를 생성합니다

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, include: [
                    '**/service/**',
                    '**/jwt/**'
            ])
        }))
    }

    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5  // 최소 50% 커버리지를 요구합니다
            }
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //Spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    runtimeOnly 'com.mysql:mysql-connector-j'

    //Eureka 클라이언트로 등록
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}

tasks.named('test') {
    useJUnitPlatform()
}
