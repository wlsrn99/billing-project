name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and run Docker Compose
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          docker-compose up -d

      - name: Wait for MySQL to be healthy
        run: |
          echo "Waiting for MySQL to be ready..."
          until docker exec mysql-container mysqladmin ping -h "mysql-container" --silent; do
            echo "MySQL is unavailable - sleeping"
            sleep 5
          done
          echo "MySQL is up - executing command"

      - name: Test MySQL connection
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: docker exec mysql-container mysql -h mysql-container -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "SHOW DATABASES;"

  build_and_test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [module-user, module-streaming]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and test ${{ matrix.module }}
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: >
          ./gradlew :${{ matrix.module }}:build
          -Dspring.datasource.url=jdbc:mysql://localhost:3305/billing
          -Dspring.datasource.username=root
          -Dspring.datasource.password=$MYSQL_ROOT_PASSWORD
          -Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

      - name: Run integration tests if available
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          if ./gradlew tasks --all | grep -q ":${{ matrix.module }}:integrationTest"; then
            ./gradlew :${{ matrix.module }}:integrationTest \
              -Dspring.datasource.url=jdbc:mysql://localhost:3305/billing \
              -Dspring.datasource.username=root \
              -Dspring.datasource.password=$MYSQL_ROOT_PASSWORD \
              -Dspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
          else
            echo "No integrationTest task found for ${{ matrix.module }}"
          fi