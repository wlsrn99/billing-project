name: CI  # CI 파이프라인 설정

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

    steps:
      - name: Checkout code  # 코드를 체크아웃
        uses: actions/checkout@v3

      - name: Build Docker images
        run: |
          docker build -t mysql-reader -f Dockerfile-reader .
          docker build -t mysql-writer -f Dockerfile-writer .

      - name: Build and run Docker Compose
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          docker-compose -f docker-compose-mysql.yml up -d  

      - name: Set up JDK 21  # JDK 21을 설치
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages  # Gradle 패키지를 캐시
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create module-user application.yml  # module-user의 application.yml 파일을 생성
        run: |
          mkdir -p module-user/src/test/resources
          echo "${{ secrets.MODULE_USER_TEST_YML }}" | base64 --decode > module-user/src/test/resources/application.yml

      - name: Build and test module-user  # module-user를 빌드하고 테스트
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3305/billing
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          ./gradlew :module-user:build --warning-mode all
          ./gradlew :module-user:test --warning-mode all

      - name: Create module-streaming application.yml  # module-streaming의 application.yml 파일을 생성
        run: |
          mkdir -p module-streaming/src/test/resources
          echo "${{ secrets.MODULE_STREAMING_TEST_YML }}" | base64 --decode > module-streaming/src/test/resources/application.yml

      - name: Build and test module-streaming  # module-streaming을 빌드하고 테스트
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3305/billing
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          ./gradlew :module-streaming:build --warning-mode all
          ./gradlew :module-streaming:test --warning-mode all
