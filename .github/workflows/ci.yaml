name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module: [module-user, module-streaming]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'

      - name: Set up Docker Compose
        run: docker-compose up -d

      - name: Wait for MySQL to be healthy
        run: |
          echo "Waiting for MySQL to be ready..."
          until docker exec mysql-container mysqladmin ping -h "mysql-container" --silent; do
            echo "MySQL is unavailable - sleeping"
            sleep 5
          done
          echo "MySQL is up - executing command"

      - name: Test MySQL connection
        env:
          MYSQL_PWD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: docker exec mysql-container mysql -h mysql-container -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e "SHOW DATABASES;"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create module-specific application.yml
        run: |
          echo "${{ secrets.${{ matrix.module | upper }}_APPLICATION_YML }}" > ${{ matrix.module }}/src/main/resources/application.yml

      - name: Build and test ${{ matrix.module }}
        run: ./gradlew :${{ matrix.module }}:build

      - name: Run integration tests
        run: ./gradlew integrationTest
